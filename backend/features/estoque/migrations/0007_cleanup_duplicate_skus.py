# Generated by Django 5.2 on 2025-09-29 19:30

from django.db import migrations
from django.db.models import Count


def cleanup_duplicate_skus(apps, schema_editor):
    """
    Remove SKUs duplicados mantendo apenas o mais recente.
    Esta função é necessária antes de aplicar a constraint unique.
    """
    ProdutoSKU = apps.get_model('estoque', 'ProdutoSKU')

    # Encontrar SKUs duplicados
    duplicated_skus = (
        ProdutoSKU.objects
        .values('sku')
        .annotate(count=Count('sku'))
        .filter(count__gt=1)
        .values_list('sku', flat=True)
    )

    print(f"Encontrados {len(duplicated_skus)} SKUs duplicados para limpeza")

    for sku_code in duplicated_skus:
        # Buscar todos os registros com esse SKU
        sku_objects = ProdutoSKU.objects.filter(sku=sku_code).order_by('-created_at')

        # Manter apenas o mais recente, deletar os outros
        to_keep = sku_objects.first()
        to_delete = sku_objects.exclude(id=to_keep.id)

        deleted_count = to_delete.count()
        if deleted_count > 0:
            print(f"SKU '{sku_code}': mantendo ID {to_keep.id}, removendo {deleted_count} duplicatas")
            to_delete.delete()


def reverse_cleanup_duplicate_skus(apps, schema_editor):
    """
    Função reversa - não pode recriar dados deletados
    """
    print("AVISO: Não é possível reverter a remoção de SKUs duplicados")
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('estoque', '0006_fix_sku_unique_constraint'),
    ]

    operations = [
        migrations.RunPython(
            cleanup_duplicate_skus,
            reverse_cleanup_duplicate_skus,
            elidable=True,
        ),
    ]
