# Generated by Django 5.2 on 2025-08-07 21:49

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ApiProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('openai', 'OpenAI'), ('anthropic', 'Anthropic')], max_length=50, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Provedor de API',
                'verbose_name_plural': 'Provedores de API',
                'db_table': 'api_providers',
            },
        ),
        migrations.CreateModel(
            name='ApiKey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nome identificador da API key', max_length=100)),
                ('key_id', models.CharField(help_text='ID da chave (não a chave completa)', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Descrição do uso desta API key')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='api_keys', to='api_monitoring.apiprovider')),
            ],
            options={
                'verbose_name': 'Chave de API',
                'verbose_name_plural': 'Chaves de API',
                'db_table': 'api_keys',
                'unique_together': {('provider', 'key_id')},
            },
        ),
        migrations.CreateModel(
            name='CostRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='Data do custo')),
                ('model_name', models.CharField(help_text='Nome do modelo', max_length=100)),
                ('input_cost', models.DecimalField(decimal_places=4, default=0, help_text='Custo de tokens de input', max_digits=10)),
                ('output_cost', models.DecimalField(decimal_places=4, default=0, help_text='Custo de tokens de output', max_digits=10)),
                ('cached_cost', models.DecimalField(decimal_places=4, default=0, help_text='Custo de tokens em cache', max_digits=10)),
                ('other_costs', models.DecimalField(decimal_places=4, default=0, help_text='Outros custos (ex: web search)', max_digits=10)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('project_id', models.CharField(blank=True, help_text='ID do projeto (se aplicável)', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('api_key', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cost_records', to='api_monitoring.apikey')),
            ],
            options={
                'verbose_name': 'Registro de Custo',
                'verbose_name_plural': 'Registros de Custo',
                'db_table': 'cost_records',
                'indexes': [models.Index(fields=['date'], name='cost_record_date_e1e6bf_idx'), models.Index(fields=['api_key', 'date'], name='cost_record_api_key_c44f7b_idx'), models.Index(fields=['model_name'], name='cost_record_model_n_e3b363_idx')],
                'unique_together': {('api_key', 'date', 'model_name', 'project_id')},
            },
        ),
        migrations.CreateModel(
            name='DataSync',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_sync_date', models.DateField(help_text='Última data sincronizada')),
                ('last_sync_timestamp', models.DateTimeField(auto_now=True)),
                ('sync_status', models.CharField(choices=[('success', 'Sucesso'), ('error', 'Erro'), ('in_progress', 'Em Progresso')], default='success', max_length=20)),
                ('error_message', models.TextField(blank=True, help_text='Mensagem de erro da última sync')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_monitoring.apiprovider')),
            ],
            options={
                'verbose_name': 'Sincronização de Dados',
                'verbose_name_plural': 'Sincronizações de Dados',
                'db_table': 'data_sync',
                'unique_together': {('provider',)},
            },
        ),
        migrations.CreateModel(
            name='UsageRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='Data do uso')),
                ('model_name', models.CharField(help_text='Nome do modelo utilizado', max_length=100)),
                ('total_requests', models.IntegerField(default=0)),
                ('input_tokens', models.BigIntegerField(default=0)),
                ('output_tokens', models.BigIntegerField(default=0)),
                ('cached_tokens', models.BigIntegerField(default=0, help_text='Tokens em cache (se aplicável)')),
                ('is_batch', models.BooleanField(default=False, help_text='Se foi processamento em batch')),
                ('project_id', models.CharField(blank=True, help_text='ID do projeto (se aplicável)', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('api_key', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usage_records', to='api_monitoring.apikey')),
            ],
            options={
                'verbose_name': 'Registro de Uso',
                'verbose_name_plural': 'Registros de Uso',
                'db_table': 'usage_records',
                'indexes': [models.Index(fields=['date'], name='usage_recor_date_dfccc4_idx'), models.Index(fields=['api_key', 'date'], name='usage_recor_api_key_021016_idx'), models.Index(fields=['model_name'], name='usage_recor_model_n_3dc59c_idx')],
                'unique_together': {('api_key', 'date', 'model_name', 'project_id')},
            },
        ),
    ]
